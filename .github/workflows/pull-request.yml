name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      # - name: Install dependencies
      #   run: npm ci

      # - name: Run linter
      #   run: npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 3

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration

    env:
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 3

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: test-results/
          retention-days: 3

  status-comment:
    name: Post Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always()
    permissions:
      pull-requests: write

    steps:
      - name: Check job statuses
        id: check-status
        run: |
          if [[ "${{ needs.lint.result }}" == "success" ]] && \
             [[ "${{ needs.unit-test.result }}" == "success" ]] && \
             [[ "${{ needs.e2e-test.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "message=✅ All checks passed successfully!" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "message=❌ Some checks failed. Please review the results above." >> $GITHUB_OUTPUT
          fi

      - name: Post PR comment
        uses: actions/github-script@v8
        with:
          script: |
            const statusIcon = '${{ steps.check-status.outputs.status }}' === 'success' ? '✅' : '❌';
            const message = '${{ steps.check-status.outputs.message }}';

            const body = `## ${statusIcon} Pull Request Status

            ${message}

            ### Job Results:
            - **Lint**: ${{ needs.lint.result }} ${{ needs.lint.result == 'success' && '✅' || '❌' }}
            - **Unit Tests**: ${{ needs.unit-test.result }} ${{ needs.unit-test.result == 'success' && '✅' || '❌' }}
            - **E2E Tests**: ${{ needs.e2e-test.result }} ${{ needs.e2e-test.result == 'success' && '✅' || '❌' }}

            [View workflow run details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
